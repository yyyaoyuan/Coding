# 自然数数组的排序

给定一个长度为 N 的整形数组 arr ，其中有 N 个互不相等的自然数 1-N 。请实现 arr 的排序，但是不要把下标0 ~ N-1，0 ～ N−1位置上的数通过直接赋值的方式替换成 1 ～ N。

## 要求

时间复杂度为 O(n) ，空间复杂度为 O(1)。

## 示例1

输入：[2,1,4,5,3]

输出：[1,2,3,4,5]

# 思路

从头遍历数组，只要当然下标位置不等于正确的结果，便一直进行替换（将当前值替换到正确的位置中），直至遍历结束。

```python
class Solution:
    def sort(self, arr):
        # write code here
        if not arr:
            return arr
        n = len(arr)
        for i in range(n):
            while arr[i] != i + 1:
                arr[arr[i]-1], arr[i] = arr[i], arr[arr[i]-1]  # 特别需要注意这里的写法，注意先后顺序，因为arr[i]被赋值完成后便会被更改掉！！！
        return arr
```

# 感想

美团面试中遇见的题目，想了一会，想起了思路，但是写的代码有一个小问题，这个是今天需要重点学习的知识点：

* arr[i], arr[arr[i]-1] = arr[arr[i]-1], arr[i] (1)

* arr[arr[i]-1], arr[i] = arr[i], arr[arr[i]-1] (2)

上述代码的结果不同，原因在于：

* 按照（1），arr[i] 先被赋值成为 arr[arr[i]-1]，因此当再执行等号左边arr[arr[i]-1]的更换时，便会引起arr[i]的改变，因此导致错误的结果！！！
* 按照（2），便可以防止（1）中情况的发生！！！

第一次遇见这个问题，下次再写类似的代码时，需要特别注意，加油！！！




